# Group By
-- This file covers the usage of Group by using examples.

### Group By according to the given department
SELECT department, SUM(salary) FROM employees GROUP BY department;

### Group By associated with where
SELECT department, SUM(salary) FROM employees WHERE region_id IN (4,5,6,7) GROUP BY department;

### Group By associated
SELECT department, COUNT(employee_id) FROM employees GROUP BY department;
SELECT department, COUNT(employee_id) number_of_employees, ROUND(AVG(salary)) average_salary,
  MIN(salary) min_salary, MAX(salary) max_salary FROM employees GROUP BY department ORDER BY number_of_employees DESC;
SELECT department, COUNT(employee_id) number_of_employees, ROUND(AVG(salary)) average_salary,
  MIN(salary) min_salary, MAX(salary) max_salary FROM employees
WHERE salary > 70000 GROUP BY department ORDER BY number_of_employees DESC;

### Two group by associated
SELECT department, gender, COUNT(employee_id) FROM employees GROUP BY department, gender ORDER BY department;

# Having
-- This file covers the usage of Having.

### Having is used to filter group data
SELECT department, COUNT(employee_id) FROM employees GROUP BY department HAVING count(*) > 35 ORDER BY department;

# Examples

### The number of identical first name
SELECT first_name, COUNT(*) FROM employees GROUP BY first_name ORDER BY first_name;

### The number of identical first name without those with only one occurrence
SELECT first_name, COUNT(*) FROM employees GROUP BY first_name HAVING count(*) > 1 ORDER BY first_name;

### All the unique departments without using distinct
SELECT department FROM employees GROUP BY department ORDER BY department;

### All the domain names and its amount
SELECT SUBSTRING(email FROM POSITION('@' IN email)+1) AS domains, COUNT(*) FROM employees GROUP BY domains ORDER BY domains;

### Min, max and average grouped by region and gender
SELECT gender, region_id, MIN(salary), MAX(salary), ROUND(AVG(salary)) FROM employees GROUP BY gender, region_id ORDER BY gender, region_id;
